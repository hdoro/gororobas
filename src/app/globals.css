@import 'tailwindcss';
@plugin "@tailwindcss/forms";
@plugin "tailwindcss-animate";

@theme {
  --background-image-gradient-radial: radial-gradient(var(--tw-gradient-stops));
  --background-image-gradient-conic: conic-gradient(
    from 180deg at 50% 50%,
    var(--tw-gradient-stops)
  );

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));

  --color-background: hsl(var(--background));
  --color-background-base: hsl(var(--background-base));
  --color-background-card: hsl(var(--background-card));

  --color-foreground: hsl(var(--foreground));

  --color-primary-50: hsl(var(--primary-50));
  --color-primary-100: hsl(var(--primary-100));
  --color-primary-200: hsl(var(--primary-200));
  --color-primary-300: hsl(var(--primary-300));
  --color-primary-400: hsl(var(--primary-400));
  --color-primary-500: hsl(var(--primary-500));
  --color-primary-600: hsl(var(--primary-600));
  --color-primary-700: hsl(var(--primary-700));
  --color-primary-800: hsl(var(--primary-800));
  --color-primary-900: hsl(var(--primary-900));
  --color-primary-950: hsl(var(--primary-950));
  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary-50: hsl(var(--secondary-50));
  --color-secondary-100: hsl(var(--secondary-100));
  --color-secondary-200: hsl(var(--secondary-200));
  --color-secondary-300: hsl(var(--secondary-300));
  --color-secondary-400: hsl(var(--secondary-400));
  --color-secondary-500: hsl(var(--secondary-500));
  --color-secondary-600: hsl(var(--secondary-600));
  --color-secondary-700: hsl(var(--secondary-700));
  --color-secondary-800: hsl(var(--secondary-800));
  --color-secondary-900: hsl(var(--secondary-900));
  --color-secondary-950: hsl(var(--secondary-950));
  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --color-customgreen-50: #f4f9f4;
  --color-customgreen-100: #e6f2e8;
  --color-customgreen-200: #cde5d1;
  --color-customgreen-300: #a5d0ad;
  --color-customgreen-400: #76b281;
  --color-customgreen-500: #52955f;
  --color-customgreen-600: #40794b;
  --color-customgreen-700: #386641;
  --color-customgreen-800: #2d4e34;
  --color-customgreen-900: #27402d;
  --color-customgreen-950: #112215;

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  --padding-page-x: var(--page-padding-x);
  --padding-page-y: var(--page-padding-y);
  --spacing-pageX: var(--page-padding-x);
  --spacing-pageY: var(--page-padding-y);

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    --background: var(--background-base);
    --background-base: 27 82% 98%;
    --background-card: 27 60% 99%;
    --foreground: var(--primary-900);
    --card: var(--background-card);
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary-50: 120 29% 97%;
    --primary-100: 130 32% 93%;
    --primary-200: 130 32% 85%;
    --primary-300: 131 31% 73%;
    --primary-400: 131 28% 58%;
    --primary-500: 132 29% 45%;
    --primary-600: 132 31% 36%;
    --primary-700: 132 29% 31%;
    --primary-800: 133 27% 24%;
    --primary-900: 134 24% 20%;
    --primary-950: 134 33% 10%;
    --primary: var(--primary-700);
    --primary-foreground: var(--primary-50);

    --secondary-50: 13 100% 97%;
    --secondary-100: 10 100% 94%;
    --secondary-200: 11 100% 89%;
    --secondary-300: 11 100% 81%;
    --secondary-400: 11 100% 68%;
    --secondary-500: 11 93% 60%;
    --secondary-600: 11 79% 51%;
    --secondary-700: 11 81% 42%;
    --secondary-800: 11 78% 35%;
    --secondary-900: 11 69% 31%;
    --secondary-950: 11 82% 15%;
    --secondary: var(--secondary-700);
    --secondary-foreground: var(--secondary-50);

    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 142.1 76.2% 36.3%;
    --radius: 0.5rem;

    --page-padding-x: 1rem;
    --page-padding-y: 1rem;

    --vegetable-card-width: 15.625rem;
    --note-card-width: 23.125rem;
  }

  /* .dark {
    --background: 20 14.3% 4.1%;
  } */
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings:
      'rlig' 1,
      'calt' 1;
  }
}

@media (min-width: 768px) {
  :root {
    --page-padding-x: 2rem;
    --page-padding-y: 2rem;
  }
}

@media (min-width: 1280px) {
  :root {
    --page-padding-x: 5rem;
    --page-padding-y: 3rem;
  }
}

@media (min-width: 1440px) {
  :root {
    --page-padding-x: 7rem;
  }
}

@media (min-width: 1920px) {
  :root {
    --page-padding-x: 10rem;
    --page-padding-y: 10rem;
  }
}

html,
body {
  height: 100%;
}

.note-body--content > .tiptap {
  height: 100%;
}

.tiptap-placeholder::before {
  content: attr(data-placeholder);
  pointer-events: none;
  float: right;
  width: 100%;
}

.tiptap-placeholder.is-empty {
  overflow: hidden;
  min-height: 1.33em;
}

.tiptap-wrapper:has(.tiptap-placeholder.is-empty)::before {
  min-height: 1.33em;
}

.tiptap[contenteditable='true'] {
  @apply space-y-[0.5em] outline-hidden;
}

/* Because YouTube embeds have `z-index: 10`, we need to lower the index of its parent container to impede it from showing above the rich text editor UI */
.tiptap--video {
  position: relative;
  z-index: -1;
}

.tiptap--image {
  @apply bg-background flex w-full justify-center overflow-hidden rounded-md;
}

.tiptap--image img {
  max-width: 100%;
  max-height: 50dvh;
}

.tiptap--video.ProseMirror-selectednode,
.tiptap--image.ProseMirror-selectednode {
  @apply ring-2;
}

.rich-text--mobile-floater > button {
  @apply flex-1;
}

.rich-text--mobile-floater > button svg {
  @apply size-5;
}

.p-empty {
  min-height: 1lh;
}

/* Only allow users to visually skip up to 2 paragraphs to prevent abuse */
.p-empty + .p-empty + .p-empty {
  min-height: 0;
}

.hide-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

.hide-scrollbar::-webkit-scrollbar {
  display: none; /* Safari and Chrome */
}

.note-card {
  position: relative;
  width: 100%;
  height: 100%;
}

.note-card[data-flipped='false'] {
  --front-index: 3;
  --front-translate: translate(0);

  --back-index: 2;
  --back-translate: translate(5%, 5%);
}

.note-card[data-flipped='true'] {
  --front-index: 2;
  --front-translate: translate(5%, 5%);

  --back-index: 3;
  --back-translate: translate(0);
}

.note-card--front,
.note-card--back {
  position: absolute;
  width: 100%;
  height: 100%;
  transition: 0.3s;
}

.note-card--front {
  z-index: var(--front-index);
  transform: var(--front-translate);
  --scrollbar-color: rgb(250 204 21);
}

.note-card--back {
  z-index: var(--back-index);
  transform: var(--back-translate);
  --scrollbar-color: rgb(245, 158, 11);
}

.note-card--content {
  overflow-x: hidden;
  overflow-y: hidden;
  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-color) transparent;
}

.note-card--content::-webkit-scrollbar-track {
  background: transparent;
}

.note-card--content::-webkit-scrollbar-thumb {
  background: var(--scrollbar-color);
}

.note-card[data-flipped='false'] .note-card--front .note-card--content {
  overflow-y: auto;
}

.note-card[data-flipped='true'] .note-card--back .note-card--content {
  overflow-y: auto;
}

.note-card--type-button {
  transition: 0.15s 0.25s;
}

.note-card--type-button:disabled {
  opacity: 0;
  z-index: 0;
  transition: 0.15s;
}

.note-card--root:target .note-card--front,
.note-card--root:target .note-card--back {
  @apply ring-primary-300 ring-offset-background ring-2 ring-offset-2;
}

.note-card--back pre {
  flex: 0 0 min-content;
}

.note-card--root img {
  max-width: 100%;
}

.link {
  @apply text-primary-700 underline;
}

@keyframes auto-scroll {
  from {
    transform: translateX(calc(var(--scroll-length) * -1));
  }
  to {
    transform: translateX(var(--scroll-length));
  }
}

.vegetables-strip {
  --animation-duration: 35s;
  --scroll-length: 50%;
  animation: auto-scroll var(--animation-duration)
    cubic-bezier(0.15, 0, 0.85, 1) forwards infinite alternate;
  animation-play-state: playing;
  animation-delay: calc(var(--animation-duration) * -0.45);
}

.vegetables-strip--wrapper + .vegetables-strip--wrapper .vegetables-strip {
  animation-direction: alternate-reverse;
}

.vegetables-strip:hover {
  animation-play-state: paused;
}

@media screen and (min-width: 1920px) {
  .vegetables-strip {
    --scroll-length: 10vw;
  }
}

.scrollbar-gradient-y,
.scrollbar-gradient-x {
  @apply relative;
}

.scrollbar-gradient-y::after,
.scrollbar-gradient-x::after {
  @apply sticky block;
  content: '';
  pointer-events: none;
}

.scrollbar-gradient-y::after {
  @apply inset-x-0 -bottom-1 h-4;
  background: linear-gradient(
    hsl(var(--background) / 0) 0%,
    hsl(var(--background)) 60%
  );
}

/* @TODO debug why after element isn't being sized or positioned correctly with sticky, even width gets ignored.
  - Chrome: 16px width, but 0 height
  - Firefox: inset-y-0 by itself doesn't set height; with h-full, I get 20 height, but 0 width
  - Safari: ::after is nowhere to be seen

  These errors don't happen with overflow-y and scrollbar-gradient-y.
*/
.scrollbar-gradient-x::after {
  @apply inset-y-0 -right-1 left-auto h-full w-4;
  background: linear-gradient(
    90deg,
    hsl(var(--background) / 0) 0%,
    hsl(var(--background)) 60%
  );
}

/* @TODO: modify ImageInput & ImageDropzone's APIs to acommodate for a less hacky way of making images forms without metadata span the whole width available of the parent */
.image-editor .image-dropzone {
  width: 100%;
  aspect-ratio: 16/9;
}
